{"version":3,"sources":["webpack:///webpack/bootstrap 2271d3fd40ecd9616b04","webpack:///./src/helper.js","webpack:///./src/stage.js","webpack:///./src/tween.js","webpack:///./src/app.js","webpack:///./src/pointer.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AChEA;AAAA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA,KAAK,qCAAqC;;AAE1C;AACA;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AAC8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA,KAAK;AACL,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iE;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACnDA;AACe;AACf;;AAEA,eAAe,OAAO;AACtB,kBAAkB,EAAE;AACpB,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,kCAAkC,UAAU;AAC5C;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAI,C;;;;;;;;AChCW;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,C","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2271d3fd40ecd9616b04","/**\n * 生成一个随机数\n * @param {number} max 随机数上限\n * @param {number} min 随机数下限\n */\nexport function random (max = 2, min = 1) {\n  return Math.round(Math.random() * (max - min)) + (min)\n}\n\n// 获取屏幕宽高\nlet {width: bodyWidth, height: bodyHeight} = getComputedStyle(document.body);\n\nexport let width = parseInt(bodyWidth, 10)\nexport let height = parseInt(bodyHeight, 10)\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/helper.js\n// module id = 0\n// module chunks = 0","/**\n * 舞台\n */\nimport Pointer from './pointer.js'\nimport {width, height, random} from './helper'\n\nclass Canvas {\n  constructor ({\n    el,\n    limit = 10,\n    pointerWidth = 15,\n    width = width,\n    height = height,\n    time = 5,\n    color = ['#f3f3f3']\n  }) {\n    // 防止创建多次\n    this.isInited = false;\n    // 限制点数量\n    this.pointerLimit = limit;\n    // 点的宽度\n    this.pointerWidth = pointerWidth;\n    // 点集合\n    this.pointers = [];\n    // 上下文\n    this.ctx = null;\n    // 元素\n    this.el = null;\n    // 时间\n    this.time = time\n    this.color = color\n\n    this.init(el, width, height)\n\n    this.render()\n  }\n  // 初始化\n  init ($el, width, height) {\n    // 防止初始化两次\n    if (this.isInited) return\n    this.isInited = true\n    // 保存 长宽\n    this.width = width;\n    this.height = height;\n    // 保存原本元素\n    this.el = $el\n    this.el.width = width;\n    this.el.height = height;\n    // 获取上下文\n    this.ctx = this.el.getContext('2d')\n\n    // 画点\n    for (let i = 0; i < this.pointerLimit; i++) {\n      this.pointerInit()\n    }\n\n  }\n\n  // 生成点\n  pointerInit () {\n    let colorLength = this.color.length\n    let pointer = new Pointer(\n      this.width,\n      this.height,\n      this.pointerWidth,\n      this.time,\n      this.color[random(colorLength)]\n    )\n\n    this.pointers.push(pointer)\n    this.pointerRender(pointer)\n  }\n\n  // 画点\n  pointerRender (pointer) {\n    this.ctx.beginPath()\n    this.ctx.arc(\n      pointer.x,\n      pointer.y,\n      pointer.r,\n      0,\n      2 * Math.PI,\n      true\n    )\n    this.ctx.fillStyle = pointer.color\n    this.ctx.fill()\n  }\n  /**\n   * 设置点数限制\n   * @param {number} limit\n   */\n  setLimit (limit) {\n    if (limit < 0) limit = 0\n    let _limit = this.pointers.length\n    if (limit > _limit) {\n      for(let i = 0; i < limit - _limit; i++) {\n        this.pointerInit()\n      }\n    } else {\n      for(let i = 0; i < _limit - limit; i++) {\n        this.pointers.shift()\n      }\n    }\n  }\n  /**\n   * 添加点\n   */\n  addPointer () {\n    this.setLimit(this.pointers.length + 1)\n  }\n  /**\n   * 删除点\n   */\n  delPointer () {\n    this.setLimit(this.pointers.length - 1)\n  }\n\n\n  // 点跑起来\n  pointerRun () {\n    this.pointers.forEach((pointer) => {\n      pointer.run()\n      this.pointerRender(pointer)\n    })\n  }\n\n  // 画线\n  lineRun () {\n    let pointer = this.pointers\n    let length = pointer.length\n    let ctx = this.ctx\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        if (i !== j) {\n          let pointer1 = pointer[i]\n          let pointer2 = pointer[j]\n          let gradient = ctx.createLinearGradient(pointer1.x, pointer1.y, pointer2.x, pointer2.y)\n          gradient.addColorStop(0, pointer1.color)\n          gradient.addColorStop(1, pointer2.color)\n\n          ctx.beginPath()\n          ctx.moveTo(pointer[i].x, pointer[i].y)\n          ctx.lineTo(pointer[j].x, pointer[j].y)\n\n          ctx.strokeStyle = gradient\n          ctx.stroke()\n        }\n      }\n    }\n  }\n\n  // 画\n  render () {\n    this.ctx.clearRect(0, 0, this.width, this.height)\n    this.ctx.fillStyle = '#f3f3f3'\n    this.ctx.strokeStyle = '#f3f3f3'\n    this.pointerRun()\n    this.lineRun()\n\n    requestAnimationFrame(this.render.bind(this))\n  }\n}\n\nexport default Canvas;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/stage.js\n// module id = 1\n// module chunks = 0","/**\n * 补间动画\n * 返回的方法.\n * 初始化 传入 一个 起点和终点.\n * 根据 贝塞尔曲线. 返回一个 方法,\n * 该方法接受一个 0 - 100 的数字\n * 返回在某个点时 应该所在的数字.\n * \n * 具体实现: 待调整\n * linear 比例大概是 每次 都是为1\n * ease 为\n */\n\n/**\n * linear\n * @param {number} start 起点\n * @param {number} end 终点\n * @param {number} percent 百分比数字 0-100\n * @return {number} 返回某个百分比下的位置\n */\nconst linear = (...rest) => calc(1, ...rest)\n\n/**\n * ease\n * TODO: 错误\n * @param {number} start 起点\n * @param {number} end 终点\n * @param {number} percent 百分比数字 0-100\n * @return {number} 返回某个百分比下的位置\n * (x-50)(x-50) = y + 2400\n */\nconst ease = (...rest) => {\n  const [start, end, percent] = rest\n  return calc(Math.sqrt(percent + 2400) + 50, ...rest)\n}\n/**\n * 计算\n * @param {number} bezier 贝塞尔系数\n * @param {number} start 起点\n * @param {number} end 终点\n * @param {number} percent 百分比数字 0-100\n * @return {number} 返回某个百分比下的位置\n */\nconst calc = (bezier, start, end, percent) => {\n  let distance = Math.abs(start - end) * percent / 100 * bezier\n  return start > end ?\n    start - distance : start + distance\n}\n\nexport default {\n  ease, linear\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/tween.js\n// module id = 2\n// module chunks = 0","import Canvas from './stage.js'\nimport {random} from './helper'\nimport tween from './tween.js'\n\nfor (let i = 0; i < 1; i++) {\n  window[`canvas${i}`] = new Canvas({\n    el: document.getElementById(`canvas${i}`),\n    width: 400,\n    height: 400,\n    limit: 15,\n    time: 60\n  })\n}\n\nsetInterval(() => {\n  // let canvas = window[`canvas${random(1)}`]\n  // let canvas = window.canvas0\n  // random(2) > 1 ? canvas.addPointer() : canvas.delPointer()\n}, 1000)\n\nsetInterval(() => {\n  let canvas = window.canvas0\n  canvas.pointers.forEach(pointer => {\n    pointer.targetInit()\n  })\n}, 60000)\n\n// window.canvas = new Canvas({\n//   el: document.getElementById('canvas0'),\n//   width: 400,\n//   height: 400,\n//   limit: 1\n// })\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = 3\n// module chunks = 0","import {random} from './helper.js'\n\n// 点 对象\nexport default class Pointer {\n  constructor (width, height, r, time = 5, color = '#f3f3f3') {\n    this.width = width\n    this.height = height\n    let x = random(width)\n    let y = random(height)\n    this.x = x\n    this.y = y\n    this.origin = {x, y}\n\n    this.color = color\n    // 最小为 10\n    this.r = random(r, 1)\n    this.time = time * 1000\n    this.targetInit()\n    this.isStart = true\n  }\n  // 设置开始时间\n  setStart () {\n    this.startTime = new Date().getTime()\n    this.endTime = this.startTime + this.time\n  }\n\n  // 生成目标点\n  targetInit () {\n    // 当已经开始时, 需要设置原先的点\n    if (this.isStart) {\n      this.origin = {\n        x: this.targetX,\n        y: this.targetY\n      }\n    }\n    this.targetX = random(this.width)\n    this.targetY = random(this.height)\n    this.setStart()\n  }\n  // 获取当前进度百分比\n  getPercent () {\n    let now = new Date().getTime()\n    let percent = Math.floor((now - this.startTime) / this.time * 10000) / 100\n    return percent > 100 ? 100 : percent\n  }\n\n  move (pointer, targetPointer) {\n    let tween = this.getPercent()\n    return targetPointer > pointer ?\n      pointer + Math.abs(targetPointer - pointer) * tween / 100 :\n      pointer - Math.abs(targetPointer - pointer) * tween / 100\n  }\n\n  run () {\n    this.x = this.move(this.origin.x, this.targetX)\n    this.y = this.move(this.origin.y, this.targetY)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pointer.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}